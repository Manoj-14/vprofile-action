name: vprofile-actions
on: workflow_dispatch #its ref to manual trigger
env:
    AWS_REGION: us-east-1
    ECR_REPOSITORY: vprofileapp
    EKS_CLUSTER: vprofile-eks
jobs:
    Testing:
        runs-on: ubuntu-latest
        steps:
            - name: Code checkout
              uses: actions/checkout@v4
            
            - name: Maven test #ubuntu latest comes with mvn
              run: mvn test

            - name: Checkstyle
              run: mvn checkstyle:checkstyle

            - name: Set Java 11
              uses: actions/setup-java@v4 #https://github.com/marketplace/actions/setup-java-jdk
              with:
                distribution: 'temurin' # See 'Supported distributions' for available options
                java-version: '11'
            
            - name: Setup SonarQube
              uses: warchant/setup-sonar-scanner@v7 #https://github.com/marketplace/actions/sonar-scanner
            
            - name: SonarQube Scan
              run: sonar-scanner
                -Dsonar.host.url=${{ secrets.SONAR_URL }}
                -Dsonar.login=${{ secrets.SONAR_TOKEN }}
                -Dsonar.organization=${{ secrets.SONAR_ORGANIZATION }}
                -Dsonar.projectKey=${{ secrets.SONAR_PROJECT_KEY }}
                -Dsonar.sources=src/
                -Dsonar.junit.reportsPath=target/surefire-reports/ 
                -Dsonar.jacoco.reportsPath=target/jacoco.exec 
                -Dsonar.java.checkstyle.reportPaths=target/checkstyle-result.xml
                -Dsonar.java.binaries=target/test-classes/com/visualpathit/account/controllerTest/  

            # - name: SonarQube Quality Gate Check
            #   id: sonarqube-quality-gate-check
            #   uses: sonarsource/sonarqube-scan-action@master   #https://github.com/marketplace/actions/sonarqube-quality-gate-check
            #   timeout-minutes: 5
            #   env:
            #     SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
    BUILD_AND_PUBLISH:
      needs: Testing #it need to mention if not both jobs will run in parallelly
      runs-on: ubuntu-latest
      steps:
        - name: Code checkout
          uses: actions/checkout@v4

        - name: BUild and upload to ECR
          uses: appleboy/docker-ecr-action@master #https://github.com/marketplace/actions/docker-ecr
          with:
            access_key: ${{ secrets.AWS_ACCESS_KEY_ID}}
            secret_key: ${{ secrets.AWS_SECRET_ACCESS_KEY}}
            registry: ${{ secrets.REGISTRY }}
            repo: ${{env.ECR_REPOSITORY}}
            region: ${{env.AWS_REGION}}
            tags: latest, ${{github.run_number}} # github.run_number -> will give the build id (can give many tags by , as delimitor)
            daemon_off: false
            dockerfile: ./Dockerfile
            context: ./